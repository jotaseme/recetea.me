imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        mapping_types:
                    enum: string
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
                    numeric_functions:
                        Rand: AppBundle\DQL\RandFunction

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# FOSRest Configuration
fos_rest:
    body_listener: true
    format_listener:
        rules:
            - { path: '^/api/v1', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/', stop: true }
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            json: true

# KnpPaginatorBundle Configuration
knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: 'KnpPaginatorBundle:Pagination:sliding.html.twig'     # sliding pagination controls template
        sortable: 'KnpPaginatorBundle:Pagination:sortable_link.html.twig' # sort link template

lexik_form_filter:
    force_case_insensitivity: false
    encoding: ~
    where_method: or
    condition_pattern: text.contains

lexik_jwt_authentication:
    private_key_path: %kernel.root_dir%/../var/jwt/private.pem
    public_key_path:  %kernel.root_dir%/../var/jwt/public.pem
    pass_phrase:      %jwt_key_pass_phrase%
    token_ttl:        3600000000

easy_admin:
    site_name: 'Recetea<em style="font-size: 80%;">ME</em>'
    disabled_actions: ['delete', 'new']
    formats:
            date:     'd/m/Y'
            time:     'H:i'
            datetime: 'd/m/Y H:i:s'
    entities:
        Recipe:
              class: AppBundle\Entity\Recipe
              label: 'Recipes'
              list:
                  fields: [{ property: 'idRecipe', label: 'ID ' }, 'name', { property: 'active', label: 'Status' }, 'duration', 'portions',  { property: 'idCategory', label: 'Category' }, { property: 'createdBy', label: 'User' } ]
                  title: "Recipes"
                  actions:
                      - { name: 'show', label: 'Show' }
                      - { name: 'search', label: 'Search' }
                      - { name: 'edit', label: 'Edit' }

              show:
                  title: 'Recipe (#%%entity_id%%) detail'
                  fields:
                       - { property: 'name', icon: 'customer' }
                       - { property: 'description', icon: 'customer' }
                       - { property: 'active', type: 'boolean' }
                       - { property: 'duration' }
                       - { property: 'portions' }
                       - { property: 'image', type: 'image', base_path: '/uploads/images/' }
                       - { property: 'recipe_tags', label: 'Tags'}
                       - { property: 'recipe_ingredients', label: 'Ingredients' }
                       - { property: 'recipe_steps', label: 'Steps' }
                       - { property: 'createdBy', label: 'User' }
                       - { property: 'createdAt', label: 'Created' }
              edit:
                  title: 'Recipe (#%%entity_id%%) edit'
                  fields:
                      - { property: 'name', icon: 'customer' }
                      - { property: 'description', icon: 'customer' }
                      - { property: 'active' }
                      - { property: 'duration' }
                      - { property: 'portions' }
                      - { property: 'recipe_tags' }
                      - { property: 'recipe_ingredients' }
                  actions:
                      - { name: 'list', label: 'Back to list' }
              search:
                  help: null
                  title: "Recipes search"
nelmio_api_doc: ~